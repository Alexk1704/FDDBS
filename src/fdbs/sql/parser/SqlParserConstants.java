/* Generated By:JavaCC: Do not edit this line. SqlParserConstants.java */
package fdbs.sql.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SqlParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER_CONSTANT = 9;
  /** RegularExpression Id. */
  int STRING_CONSTANT = 10;
  /** RegularExpression Id. */
  int ACCESS = 11;
  /** RegularExpression Id. */
  int ADD = 12;
  /** RegularExpression Id. */
  int ALL = 13;
  /** RegularExpression Id. */
  int ALTER = 14;
  /** RegularExpression Id. */
  int AND = 15;
  /** RegularExpression Id. */
  int ANY = 16;
  /** RegularExpression Id. */
  int AS = 17;
  /** RegularExpression Id. */
  int ASC = 18;
  /** RegularExpression Id. */
  int AUDIT = 19;
  /** RegularExpression Id. */
  int BETWEEN = 20;
  /** RegularExpression Id. */
  int BY = 21;
  /** RegularExpression Id. */
  int CHAR = 22;
  /** RegularExpression Id. */
  int CHECK = 23;
  /** RegularExpression Id. */
  int CLUSTER = 24;
  /** RegularExpression Id. */
  int COLUMN = 25;
  /** RegularExpression Id. */
  int COMMENT = 26;
  /** RegularExpression Id. */
  int COMPRESS = 27;
  /** RegularExpression Id. */
  int CONNECT = 28;
  /** RegularExpression Id. */
  int CREATE = 29;
  /** RegularExpression Id. */
  int CURRENT = 30;
  /** RegularExpression Id. */
  int DATE = 31;
  /** RegularExpression Id. */
  int DECIMAL = 32;
  /** RegularExpression Id. */
  int DEFAULT_Token = 33;
  /** RegularExpression Id. */
  int DELETE = 34;
  /** RegularExpression Id. */
  int DESC = 35;
  /** RegularExpression Id. */
  int DISTINCT = 36;
  /** RegularExpression Id. */
  int DROP = 37;
  /** RegularExpression Id. */
  int ELSE = 38;
  /** RegularExpression Id. */
  int EXCLUSIVE = 39;
  /** RegularExpression Id. */
  int EXISTS = 40;
  /** RegularExpression Id. */
  int FILE = 41;
  /** RegularExpression Id. */
  int FLOAT = 42;
  /** RegularExpression Id. */
  int FOR = 43;
  /** RegularExpression Id. */
  int FROM = 44;
  /** RegularExpression Id. */
  int GRANT = 45;
  /** RegularExpression Id. */
  int GROUP = 46;
  /** RegularExpression Id. */
  int HAVING = 47;
  /** RegularExpression Id. */
  int IDENTIFIED = 48;
  /** RegularExpression Id. */
  int IMMEDIATE = 49;
  /** RegularExpression Id. */
  int IN = 50;
  /** RegularExpression Id. */
  int INCREMENT = 51;
  /** RegularExpression Id. */
  int INDEX = 52;
  /** RegularExpression Id. */
  int INITIAL = 53;
  /** RegularExpression Id. */
  int INSERT = 54;
  /** RegularExpression Id. */
  int INTEGER = 55;
  /** RegularExpression Id. */
  int INTERSECT = 56;
  /** RegularExpression Id. */
  int INTO = 57;
  /** RegularExpression Id. */
  int IS = 58;
  /** RegularExpression Id. */
  int LEVEL = 59;
  /** RegularExpression Id. */
  int LIKE = 60;
  /** RegularExpression Id. */
  int LOCK = 61;
  /** RegularExpression Id. */
  int LONG = 62;
  /** RegularExpression Id. */
  int MAXEXTENTS = 63;
  /** RegularExpression Id. */
  int MINUS = 64;
  /** RegularExpression Id. */
  int MLSLABEL = 65;
  /** RegularExpression Id. */
  int MODE = 66;
  /** RegularExpression Id. */
  int MODIFY = 67;
  /** RegularExpression Id. */
  int NOAUDIT = 68;
  /** RegularExpression Id. */
  int NOCOMPRESS = 69;
  /** RegularExpression Id. */
  int NOT = 70;
  /** RegularExpression Id. */
  int NOWAIT = 71;
  /** RegularExpression Id. */
  int NULL = 72;
  /** RegularExpression Id. */
  int NUMBER = 73;
  /** RegularExpression Id. */
  int OF = 74;
  /** RegularExpression Id. */
  int OFFLINE = 75;
  /** RegularExpression Id. */
  int ON = 76;
  /** RegularExpression Id. */
  int ONLINE = 77;
  /** RegularExpression Id. */
  int OPTION = 78;
  /** RegularExpression Id. */
  int OR = 79;
  /** RegularExpression Id. */
  int ORDER = 80;
  /** RegularExpression Id. */
  int PCTFREE = 81;
  /** RegularExpression Id. */
  int PRIOR = 82;
  /** RegularExpression Id. */
  int PUBLIC = 83;
  /** RegularExpression Id. */
  int RAW = 84;
  /** RegularExpression Id. */
  int RENAME = 85;
  /** RegularExpression Id. */
  int RESOURCE = 86;
  /** RegularExpression Id. */
  int REVOKE = 87;
  /** RegularExpression Id. */
  int ROW = 88;
  /** RegularExpression Id. */
  int ROWNUM = 89;
  /** RegularExpression Id. */
  int ROWS = 90;
  /** RegularExpression Id. */
  int SELECT = 91;
  /** RegularExpression Id. */
  int SESSION = 92;
  /** RegularExpression Id. */
  int SET = 93;
  /** RegularExpression Id. */
  int SHARE = 94;
  /** RegularExpression Id. */
  int SIZE = 95;
  /** RegularExpression Id. */
  int SMALLINT = 96;
  /** RegularExpression Id. */
  int START = 97;
  /** RegularExpression Id. */
  int SUCCESSFUL = 98;
  /** RegularExpression Id. */
  int SYNONYM = 99;
  /** RegularExpression Id. */
  int SYSDATE = 100;
  /** RegularExpression Id. */
  int TABLE = 101;
  /** RegularExpression Id. */
  int THEN = 102;
  /** RegularExpression Id. */
  int TO = 103;
  /** RegularExpression Id. */
  int TRIGGER = 104;
  /** RegularExpression Id. */
  int UID = 105;
  /** RegularExpression Id. */
  int UNION = 106;
  /** RegularExpression Id. */
  int UNIQUE = 107;
  /** RegularExpression Id. */
  int UPDATE = 108;
  /** RegularExpression Id. */
  int USER = 109;
  /** RegularExpression Id. */
  int VALIDATE = 110;
  /** RegularExpression Id. */
  int VALUES = 111;
  /** RegularExpression Id. */
  int VARCHAR = 112;
  /** RegularExpression Id. */
  int VARCHAR2 = 113;
  /** RegularExpression Id. */
  int VIEW = 114;
  /** RegularExpression Id. */
  int WHENEVER = 115;
  /** RegularExpression Id. */
  int WHERE = 116;
  /** RegularExpression Id. */
  int WITH = 117;
  /** RegularExpression Id. */
  int COLUMN_VALUE = 118;
  /** RegularExpression Id. */
  int NESTED_TABLE_IDCOLUMN_VALUE = 119;
  /** RegularExpression Id. */
  int CONSTRAINT = 120;
  /** RegularExpression Id. */
  int PRIMARYKEY = 121;
  /** RegularExpression Id. */
  int FOREIGNKEY = 122;
  /** RegularExpression Id. */
  int REFERENCES = 123;
  /** RegularExpression Id. */
  int CascadeConstraints = 124;
  /** RegularExpression Id. */
  int PURGE = 125;
  /** RegularExpression Id. */
  int COUNT = 126;
  /** RegularExpression Id. */
  int SUM = 127;
  /** RegularExpression Id. */
  int MAX = 128;
  /** RegularExpression Id. */
  int STAR = 129;
  /** RegularExpression Id. */
  int HORIZONTAL = 130;
  /** RegularExpression Id. */
  int VERTICAL = 131;
  /** RegularExpression Id. */
  int IDENTIFIER = 132;
  /** RegularExpression Id. */
  int LPAREN = 133;
  /** RegularExpression Id. */
  int RPAREN = 134;
  /** RegularExpression Id. */
  int COMMA = 135;
  /** RegularExpression Id. */
  int SEMICOLON = 136;
  /** RegularExpression Id. */
  int SINGLE_QUOTE = 137;
  /** RegularExpression Id. */
  int DOT = 138;
  /** RegularExpression Id. */
  int LT = 139;
  /** RegularExpression Id. */
  int LEQ = 140;
  /** RegularExpression Id. */
  int GEQ = 141;
  /** RegularExpression Id. */
  int GT = 142;
  /** RegularExpression Id. */
  int NEQ = 143;
  /** RegularExpression Id. */
  int EQ = 144;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int MULTI_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 8>",
    "<INTEGER_CONSTANT>",
    "<STRING_CONSTANT>",
    "\"ACCESS\"",
    "\"ADD\"",
    "\"ALL\"",
    "\"ALTER\"",
    "\"AND\"",
    "\"ANY\"",
    "\"AS\"",
    "\"ASC\"",
    "\"AUDIT\"",
    "\"BETWEEN\"",
    "\"BY\"",
    "\"CHAR\"",
    "\"CHECK\"",
    "\"CLUSTER\"",
    "\"COLUMN\"",
    "\"COMMENT\"",
    "\"COMPRESS\"",
    "\"CONNECT\"",
    "\"CREATE\"",
    "\"CURRENT\"",
    "\"DATE\"",
    "\"DECIMAL\"",
    "\"DEFAULT\"",
    "\"DELETE\"",
    "\"DESC\"",
    "\"DISTINCT\"",
    "\"DROP\"",
    "\"ELSE\"",
    "\"EXCLUSIVE\"",
    "\"EXISTS\"",
    "\"FILE\"",
    "\"FLOAT\"",
    "\"FOR\"",
    "\"FROM\"",
    "\"GRANT\"",
    "\"GROUP\"",
    "\"HAVING\"",
    "\"IDENTIFIED\"",
    "\"IMMEDIATE\"",
    "\"IN\"",
    "\"INCREMENT\"",
    "\"INDEX\"",
    "\"INITIAL\"",
    "\"INSERT\"",
    "\"INTEGER\"",
    "\"INTERSECT\"",
    "\"INTO\"",
    "\"IS\"",
    "\"LEVEL\"",
    "\"LIKE\"",
    "\"LOCK\"",
    "\"LONG\"",
    "\"MAXEXTENTS\"",
    "\"MINUS\"",
    "\"MLSLABEL\"",
    "\"MODE\"",
    "\"MODIFY\"",
    "\"NOAUDIT\"",
    "\"NOCOMPRESS\"",
    "\"NOT\"",
    "\"NOWAIT\"",
    "\"NULL\"",
    "\"NUMBER\"",
    "\"OF\"",
    "\"OFFLINE\"",
    "\"ON\"",
    "\"ONLINE\"",
    "\"OPTION\"",
    "\"OR\"",
    "\"ORDER\"",
    "\"PCTFREE\"",
    "\"PRIOR\"",
    "\"PUBLIC\"",
    "\"RAW\"",
    "\"RENAME\"",
    "\"RESOURCE\"",
    "\"REVOKE\"",
    "\"ROW\"",
    "\"ROWNUM\"",
    "\"ROWS\"",
    "\"SELECT\"",
    "\"SESSION\"",
    "\"SET\"",
    "\"SHARE\"",
    "\"SIZE\"",
    "\"SMALLINT\"",
    "\"START\"",
    "\"SUCCESSFUL\"",
    "\"SYNONYM\"",
    "\"SYSDATE\"",
    "\"TABLE\"",
    "\"THEN\"",
    "\"TO\"",
    "\"TRIGGER\"",
    "\"UID\"",
    "\"UNION\"",
    "\"UNIQUE\"",
    "\"UPDATE\"",
    "\"USER\"",
    "\"VALIDATE\"",
    "\"VALUES\"",
    "\"VARCHAR\"",
    "\"VARCHAR2\"",
    "\"VIEW\"",
    "\"WHENEVER\"",
    "\"WHERE\"",
    "\"WITH\"",
    "\"COLUMN_VALUE\"",
    "\"NESTED_TABLE_IDCOLUMN_VALUE\"",
    "\"CONSTRAINT\"",
    "\"PRIMARY KEY\"",
    "\"FOREIGN KEY\"",
    "\"REFERENCES\"",
    "\"CASCADE CONSTRAINTS\"",
    "\"PURGE\"",
    "\"COUNT\"",
    "\"SUM\"",
    "\"MAX\"",
    "\"*\"",
    "\"HORIZONTAL\"",
    "\"VERTICAL\"",
    "<IDENTIFIER>",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "\"\\\'\"",
    "\".\"",
    "\"<\"",
    "\"<=\"",
    "\">=\"",
    "\">\"",
    "\"!=\"",
    "\"=\"",
  };

}
